crystal_doc_search_index_callback({"repository_name":"github.com/RomainFranceschini/cgl","body":"# Crystal Graph Library (CGL)\n\nCGL is a Crystal library for the creation and manipulation of graph data structures.\n\nAll graph data structures are based on an adjacency list representation and heavily rely on Crystal `Hash` data structure.\n\n## Features\n\n  - [x] Data structures for graphs, digraphs and ~~multigraphs~~\n  - [x] Nodes can be anything\n  - [x] Edges can be weighted and/or hold arbitrary data as labels\n  - [x] Generic interface for accessing concrete data structures (see `CGL::IGraph`)\n  - [x] Generic interface for traversing graphs (iterators, visitor)\n  - [ ] Standard graph algorithms\n  - [ ] Support hypergraphs\n\n## Documentation\n\n* [API](https://romainfranceschini.github.io/cgl/)\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     cgl:\n       github: RomainFranceschini/cgl\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"cgl\"\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/RomainFranceschini/cgl/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Romain Franceschini](https://github.com/RomainFranceschini) - creator and maintainer\n","program":{"html_id":"github.com/RomainFranceschini/cgl/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"github.com/RomainFranceschini/cgl","program":true,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL","path":"CGL.html","kind":"module","full_name":"CGL","name":"CGL","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cgl/errors.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/errors.cr"},{"filename":"cgl/edges.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"},{"filename":"cgl/igraph.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr"},{"filename":"cgl/representations/adjacency.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr"},{"filename":"cgl/graph.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr"},{"filename":"cgl/digraph.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr"},{"filename":"cgl/traversal/iterators.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr"},{"filename":"cgl/traversal/visitor.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/visitor.cr"},{"filename":"cgl/format/dot.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr"},{"filename":"cgl.cr","line_number":10,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.0\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","path":"CGL/AdjacencyHash.html","kind":"module","full_name":"CGL::AdjacencyHash(V, W, L)","name":"AdjacencyHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cgl/representations/adjacency.cr","line_number":7,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/DiGraph","kind":"class","full_name":"CGL::DiGraph(V)","name":"DiGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Graph","kind":"class","full_name":"CGL::Graph(V)","name":"Graph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LabeledDiGraph","kind":"class","full_name":"CGL::LabeledDiGraph(V, L)","name":"LabeledDiGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LabeledGraph","kind":"class","full_name":"CGL::LabeledGraph(V, L)","name":"LabeledGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedDiGraph","kind":"class","full_name":"CGL::WeightedDiGraph(V, W)","name":"WeightedDiGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedGraph","kind":"class","full_name":"CGL::WeightedGraph(V, W)","name":"WeightedGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedLabeledDiGraph","kind":"class","full_name":"CGL::WeightedLabeledDiGraph(V, W, L)","name":"WeightedLabeledDiGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedLabeledGraph","kind":"class","full_name":"CGL::WeightedLabeledGraph(V, W, L)","name":"WeightedLabeledGraph"}],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":"Reusable adjacency list representation for a `IGraph`.\n\nUses a hash table to associate each vertex `V` with a set of adjacent\nvertices. The set is backed by another hash table that can be used to store\narbitrary data of type `L` and a weight of type `W` with each edge.","summary":"<p>Reusable adjacency list representation for a <code><a href=\"../CGL/IGraph.html\">IGraph</a></code>.</p>","class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,&block:->L?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,default_label:L?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&block:->L?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:L?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(edge:CGL::AnyEdge(V))-instance-method","html_id":"add_edge(edge:CGL::AnyEdge(V))-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"AnyEdge(V)"}],"args_string":"(edge : CGL::AnyEdge(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L88","def":{"name":"add_edge","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"AnyEdge(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"weight = edge.is_a?(Weightable(W)) ? edge.weight : default_weight\nlabel = edge.is_a?(Labelable(L)) ? edge.label : default_label\nadd_edge(edge.u, edge.v, weight, label)\n"}},{"id":"add_vertex(v:V)-instance-method","html_id":"add_vertex(v:V)-instance-method","name":"add_vertex","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L110","def":{"name":"add_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vertices[v]"}},{"id":"clear-instance-method","html_id":"clear-instance-method","name":"clear","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L104","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vertices.clear\n@size = 0\nself\n"}},{"id":"each_adjacent(u:V,&:V->)-instance-method","html_id":"each_adjacent(u:V,&amp;:V-&gt;)-instance-method","name":"each_adjacent","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L156","def":{"name":"each_adjacent","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"if has_vertex?(u)\n  @vertices[u].each_key do |v|\n    yield v\n  end\nend"}},{"id":"each_adjacent(u:V):Iterator(V)-instance-method","html_id":"each_adjacent(u:V):Iterator(V)-instance-method","name":"each_adjacent","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V) : Iterator(V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L162","def":{"name":"each_adjacent","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(V)","visibility":"Public","body":"if has_vertex?(u)\n  @vertices[u].each_key\nelse\n  raise(GraphError.new(\"vertex #{u} is not part of this graph\"))\nend"}},{"id":"each_vertex(&:V->)-instance-method","html_id":"each_vertex(&amp;:V-&gt;)-instance-method","name":"each_vertex","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"(& : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L140","def":{"name":"each_vertex","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"@vertices.each_key do |v|\n  yield v\nend"}},{"id":"each_vertex:Iterator(V)-instance-method","html_id":"each_vertex:Iterator(V)-instance-method","name":"each_vertex","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Iterator(V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L144","def":{"name":"each_vertex","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(V)","visibility":"Public","body":"@vertices.each_key"}},{"id":"has_edge?(u:V,v:V,weight:W,label:L?):Bool-instance-method","html_id":"has_edge?(u:V,v:V,weight:W,label:L?):Bool-instance-method","name":"has_edge?","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W, label : L?) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L118","def":{"name":"has_edge?","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(has_edge?(u, v)) && ((unsafe_fetch(u, v)) == {weight, label})"}},{"id":"has_edge?(u:V,v:V):Bool-instance-method","html_id":"has_edge?(u:V,v:V):Bool-instance-method","name":"has_edge?","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L114","def":{"name":"has_edge?","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"(has_vertex?(u)) && (@vertices[u].has_key?(v))"}},{"id":"has_vertex?(v:V):Bool-instance-method","html_id":"has_vertex?(v:V):Bool-instance-method","name":"has_vertex?","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L152","def":{"name":"has_vertex?","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"@vertices.has_key?(v)"}},{"id":"label_block:->L?-instance-method","html_id":"label_block:-&gt;L?-instance-method","name":"label_block","doc":"The block triggered for default edge labels.","summary":"<p>The block triggered for default edge labels.</p>","abstract":false,"args":[],"args_string":" :  -> L?","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L14","def":{"name":"label_block","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"(-> L | ::Nil)","visibility":"Public","body":"@label_block"}},{"id":"label_of(u:V,v:V):L?-instance-method","html_id":"label_of(u:V,v:V):L?-instance-method","name":"label_of","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V) : L?","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L131","def":{"name":"label_of","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"L | ::Nil","visibility":"Public","body":"if has_edge?(u, v)\nelse\n  return nil\nend\n(unsafe_fetch(u, v)).last\n"}},{"id":"order:Int32-instance-method","html_id":"order:Int32-instance-method","name":"order","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L136","def":{"name":"order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@vertices.size"}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"The number of edges in `self`.","summary":"<p>The number of edges in <code>self</code>.</p>","abstract":false,"args":[],"args_string":" : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L11","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"@size"}},{"id":"vertices-instance-method","html_id":"vertices-instance-method","name":"vertices","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L148","def":{"name":"vertices","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@vertices.keys"}},{"id":"weight_of(u:V,v:V):W-instance-method","html_id":"weight_of(u:V,v:V):W-instance-method","name":"weight_of","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V) : W","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L126","def":{"name":"weight_of","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"W","visibility":"Public","body":"if has_edge?(u, v)\nelse\n  return nil\nend\n(unsafe_fetch(u, v)).first\n"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","path":"CGL/AnyEdge.html","kind":"module","full_name":"CGL::AnyEdge(V)","name":"AnyEdge","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cgl/edges.cr","line_number":2,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Directed","kind":"module","full_name":"CGL::Directed(V)","name":"Directed"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Undirected","kind":"module","full_name":"CGL::Undirected(V)","name":"Undirected"}],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u:V,v:V)-class-method","html_id":"new(u:V,v:V)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L6","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(u, v)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L13","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@u.clone, @v.clone)"}},{"id":"to_tuple-instance-method","html_id":"to_tuple-instance-method","name":"to_tuple","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L9","def":{"name":"to_tuple","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@u, @v}"}},{"id":"u:V-instance-method","html_id":"u:V-instance-method","name":"u","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L3","def":{"name":"u","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V","visibility":"Public","body":"@u"}},{"id":"u=(u:V)-instance-method","html_id":"u=(u:V)-instance-method","name":"u=","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L3","def":{"name":"u=","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@u = u"}},{"id":"v:V-instance-method","html_id":"v:V-instance-method","name":"v","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : V","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L4","def":{"name":"v","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"V","visibility":"Public","body":"@v"}},{"id":"v=(v:V)-instance-method","html_id":"v=(v:V)-instance-method","name":"v=","doc":null,"summary":null,"abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L4","def":{"name":"v=","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@v = v"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/BFSIterator","path":"CGL/BFSIterator.html","kind":"class","full_name":"CGL::BFSIterator(V)","name":"BFSIterator","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/CGL/GraphIterator","kind":"class","full_name":"CGL::GraphIterator","name":"GraphIterator"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/GraphIterator","kind":"class","full_name":"CGL::GraphIterator","name":"GraphIterator"},{"html_id":"github.com/RomainFranceschini/cgl/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/RomainFranceschini/cgl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/traversal/iterators.cr","line_number":50,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":"A `BFSIterator` can be used to traverse a graph from a given vertex `V` in\na Breadth-first search fashion.","summary":"<p>A <code><a href=\"../CGL/BFSIterator.html\">BFSIterator</a></code> can be used to traverse a graph from a given vertex <code>V</code> in a Breadth-first search fashion.</p>","class_methods":[],"constructors":[{"id":"new(graph:CGL::IGraph(V),start:V)-class-method","html_id":"new(graph:CGL::IGraph(V),start:V)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"V"}],"args_string":"(graph : CGL::IGraph(V), start : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L15","def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = BFSIterator(V).allocate\n_.initialize(graph, start)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Color","path":"CGL/Color.html","kind":"enum","full_name":"CGL::Color","name":"Color","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"github.com/RomainFranceschini/cgl/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"github.com/RomainFranceschini/cgl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/traversal/iterators.cr","line_number":2,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":true,"alias":false,"aliased":"","const":false,"constants":[{"id":"White","name":"White","value":"0","doc":null,"summary":null},{"id":"Gray","name":"Gray","value":"1","doc":null,"summary":null},{"id":"Black","name":"Black","value":"2","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"black?-instance-method","html_id":"black?-instance-method","name":"black?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L5","def":{"name":"black?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Black"}},{"id":"gray?-instance-method","html_id":"gray?-instance-method","name":"gray?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L4","def":{"name":"gray?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == Gray"}},{"id":"white?-instance-method","html_id":"white?-instance-method","name":"white?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L3","def":{"name":"white?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self == White"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/DFSIterator","path":"CGL/DFSIterator.html","kind":"class","full_name":"CGL::DFSIterator(V)","name":"DFSIterator","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/CGL/GraphIterator","kind":"class","full_name":"CGL::GraphIterator","name":"GraphIterator"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/GraphIterator","kind":"class","full_name":"CGL::GraphIterator","name":"GraphIterator"},{"html_id":"github.com/RomainFranceschini/cgl/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/RomainFranceschini/cgl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/traversal/iterators.cr","line_number":58,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":"A `DFSIterator` can be used to traverse a graph from a given vertex `V` in\na Depth-first search fashion.","summary":"<p>A <code><a href=\"../CGL/DFSIterator.html\">DFSIterator</a></code> can be used to traverse a graph from a given vertex <code>V</code> in a Depth-first search fashion.</p>","class_methods":[],"constructors":[{"id":"new(graph:CGL::IGraph(V),start:V)-class-method","html_id":"new(graph:CGL::IGraph(V),start:V)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"V"}],"args_string":"(graph : CGL::IGraph(V), start : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L15","def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DFSIterator(V).allocate\n_.initialize(graph, start)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/DiEdge","path":"CGL/DiEdge.html","kind":"struct","full_name":"CGL::DiEdge(V)","name":"DiEdge","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Directed","kind":"module","full_name":"CGL::Directed","name":"Directed"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"},{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/RomainFranceschini/cgl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/edges.cr","line_number":122,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Directed","kind":"module","full_name":"CGL::Directed","name":"Directed"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u:V,v:V)-class-method","html_id":"new(u:V,v:V)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L6","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DiEdge(V).allocate\n_.initialize(u, v)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/DiGraph","path":"CGL/DiGraph.html","kind":"class","full_name":"CGL::DiGraph(V)","name":"DiGraph","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/digraph.cr","line_number":2,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:Nil?=nil,&block:->Nil?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:Nil?=nil,&amp;block:-&gt;Nil?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(Nil?)? = <span class=\"n\">nil</span>, *, default_weight : Nil? = <span class=\"n\">nil</span>, &block :  -> Nil?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = DiGraph(V).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:Nil?=nil,default_label:Nil?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:Nil?=nil,default_label:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(Nil?)? = <span class=\"n\">nil</span>, *, default_weight : Nil? = <span class=\"n\">nil</span>, default_label : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DiGraph(V).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,&block:->Nil?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,&amp;block:-&gt;Nil?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : Nil? = <span class=\"n\">nil</span>, &block :  -> Nil?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = DiGraph(V).allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,default_label:Nil?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,default_label:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : Nil? = <span class=\"n\">nil</span>, default_label : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DiGraph(V).allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:Nil?=self.default_label)-instance-method","html_id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:Nil?=self.default_label)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W = <span class=\"k\">self</span>.default_weight, label : Nil? = <span class=\"k\">self</span>.default_label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"adj = @vertices[u]\nif !(adj.has_key?(v))\n  add_vertex(v)\n  @size = @size + 1\n  adj[v] = {weight, label}\nend\n"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(in_degree_of(v)) + (out_degree_of(v))"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"true"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":false,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_vertex do |u|\n  each_adjacent(u) do |v|\n    yield unchecked_edge(u, v)\n  end\nend"}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(u) do |v|\n  yield unchecked_edge(u, v)\nend"}},{"id":"each_predecessor(v:V,&:V->)-instance-method","html_id":"each_predecessor(v:V,&amp;:V-&gt;)-instance-method","name":"each_predecessor","doc":"Yields each predecessor of *u* in the graph.","summary":"<p>Yields each predecessor of <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V, & : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"each_predecessor","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      yield u\n    end\n  end\nend"}},{"id":"each_successor(u:V,&block:V->)-instance-method","html_id":"each_successor(u:V,&amp;block:V-&gt;)-instance-method","name":"each_successor","doc":"Yields each successor of *u* in the graph.","summary":"<p>Yields each successor of <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, &block : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"each_successor","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(&block)"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"size = 0\nif has_vertex?(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      size = size + 1\n    end\n  end\nend\nsize\n"}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if has_vertex?(v)\nelse\n  return 0\nend\n@vertices[v].size\n"}},{"id":"remove_edge(u:V,v:V,&)-instance-method","html_id":"remove_edge(u:V,v:V,&amp;)-instance-method","name":"remove_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if edge = edge?(u, v)\n  @vertices[u].delete(v)\n  @size = @size - 1\n  edge\nelse\n  yield u, v\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L4","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  @size = @size - @vertices[v].size\n  @vertices.delete(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      @vertices[u].delete(v)\n      @size = @size - 1\n    end\n  end\nelse\n  raise(GraphError.new(\"The vertex #{v} is not in the graph.\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Directed","path":"CGL/Directed.html","kind":"module","full_name":"CGL::Directed(V)","name":"Directed","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"}],"locations":[{"filename":"cgl/edges.cr","line_number":41,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/DiEdge","kind":"struct","full_name":"CGL::DiEdge(V)","name":"DiEdge"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LDiEdge","kind":"struct","full_name":"CGL::LDiEdge(V, L)","name":"LDiEdge"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WDiEdge","kind":"struct","full_name":"CGL::WDiEdge(V, W)","name":"WDiEdge"}],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:AnyEdge)-instance-method","html_id":"==(other:AnyEdge)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyEdge"}],"args_string":"(other : AnyEdge)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L44","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyEdge"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((@u == other.u) && (@v == other.v))"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L52","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = @u.hash(hasher)\nhasher = @v.hash(hasher)\nhasher\n"}},{"id":"reverse-instance-method","html_id":"reverse-instance-method","name":"reverse","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L48","def":{"name":"reverse","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"({{ @type }}).new(@v, @u)"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/DotVisitor","path":"CGL/DotVisitor.html","kind":"class","full_name":"CGL::DotVisitor(V)","name":"DotVisitor","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Visitor","kind":"module","full_name":"CGL::Visitor","name":"Visitor"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/format/dot.cr","line_number":2,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Visitor","kind":"module","full_name":"CGL::Visitor","name":"Visitor"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(graph:CGL::IGraph(V),io:IO)-class-method","html_id":"new(graph:CGL::IGraph(V),io:IO)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(graph : CGL::IGraph(V), io : IO)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr#L5","def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"},{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = DotVisitor(V).allocate\n_.initialize(graph, io)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"generate-instance-method","html_id":"generate-instance-method","name":"generate","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr#L12","def":{"name":"generate","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(@graph.directed? ? \"digraph\" : \"graph\")\nwrite('{')\n@graph.accept(self)\nwrite('}')\n"}},{"id":"visit(edge:CGL::Undirected(V))-instance-method","html_id":"visit(edge:CGL::Undirected(V))-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Undirected(V)"}],"args_string":"(edge : CGL::Undirected(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr#L21","def":{"name":"visit","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Undirected(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(\"\\\"#{edge.u}\\\" -- \\\"#{edge.v}\\\";\")"}},{"id":"visit(edge:CGL::Directed(V))-instance-method","html_id":"visit(edge:CGL::Directed(V))-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Directed(V)"}],"args_string":"(edge : CGL::Directed(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr#L25","def":{"name":"visit","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Directed(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"write(\"\\\"#{edge.u}\\\" -> \\\"#{edge.v}\\\";\")"}},{"id":"visit(visitable)-instance-method","html_id":"visit(visitable)-instance-method","name":"visit","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitable","doc":null,"default_value":"","external_name":"visitable","restriction":""}],"args_string":"(visitable)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr#L29","def":{"name":"visit","args":[{"name":"visitable","doc":null,"default_value":"","external_name":"visitable","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Edge","path":"CGL/Edge.html","kind":"struct","full_name":"CGL::Edge(V)","name":"Edge","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Undirected","kind":"module","full_name":"CGL::Undirected","name":"Undirected"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"},{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/RomainFranceschini/cgl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/edges.cr","line_number":108,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Undirected","kind":"module","full_name":"CGL::Undirected","name":"Undirected"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u:V,v:V)-class-method","html_id":"new(u:V,v:V)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L6","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Edge(V).allocate\n_.initialize(u, v)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/EdgeError","path":"CGL/EdgeError.html","kind":"class","full_name":"CGL::EdgeError","name":"EdgeError","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/CGL/GraphError","kind":"class","full_name":"CGL::GraphError","name":"GraphError"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/GraphError","kind":"class","full_name":"CGL::GraphError","name":"GraphError"},{"html_id":"github.com/RomainFranceschini/cgl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/errors.cr","line_number":5,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/errors.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/EdgeIterator","path":"CGL/EdgeIterator.html","kind":"class","full_name":"CGL::EdgeIterator(V)","name":"EdgeIterator","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/RomainFranceschini/cgl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/traversal/iterators.cr","line_number":64,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(graph)-class-method","html_id":"new(graph)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":""}],"args_string":"(graph)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L73","def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = EdgeIterator(V).allocate\n_.initialize(graph)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L77","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"loop do\n  if u = next_u\n    if v = get_v(u)\n      edge = @graph.edge(u, v)\n      if @graph.directed?\n        return edge\n      else\n        if !(@visited.includes?(edge))\n          @visited << edge\n          return edge\n        end\n      end\n    else\n      @u = nil\n      @adj_it = nil\n    end\n  else\n    return stop\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Graph","path":"CGL/Graph.html","kind":"class","full_name":"CGL::Graph(V)","name":"Graph","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/graph.cr","line_number":2,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:Nil?=nil,&block:->Nil?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:Nil?=nil,&amp;block:-&gt;Nil?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(Nil?)? = <span class=\"n\">nil</span>, *, default_weight : Nil? = <span class=\"n\">nil</span>, &block :  -> Nil?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = Graph(V).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:Nil?=nil,default_label:Nil?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:Nil?=nil,default_label:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(Nil?)? = <span class=\"n\">nil</span>, *, default_weight : Nil? = <span class=\"n\">nil</span>, default_label : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Graph(V).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,&block:->Nil?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,&amp;block:-&gt;Nil?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : Nil? = <span class=\"n\">nil</span>, &block :  -> Nil?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = Graph(V).allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,default_label:Nil?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,default_label:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : Nil? = <span class=\"n\">nil</span>, default_label : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = Graph(V).allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:Nil?=self.default_label)-instance-method","html_id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:Nil?=self.default_label)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W = <span class=\"k\">self</span>.default_weight, label : Nil? = <span class=\"k\">self</span>.default_label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_edge?(u, v)\nelse\n  @size = @size + 1\n  @vertices[u][v] = {weight, label}\n  @vertices[v][u] = {weight, label}\nend"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if has_vertex?(v)\nelse\n  return 0\nend\nadj = @vertices[v]\nsize = adj.size\nif adj.has_key?(v)\n  size = size + 1\nend\nsize\n"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":false,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"visited = Set(AnyEdge(V)).new\neach_vertex do |u|\n  each_adjacent(u) do |v|\n    edge = unchecked_edge(u, v)\n    if !(visited.includes?(edge))\n      visited << edge\n      yield edge\n    end\n  end\nend\n"}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(u) do |v|\n  yield unchecked_edge(u, v)\nend"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"degree_of(v)"}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"degree_of(v)"}},{"id":"remove_edge(u:V,v:V,&)-instance-method","html_id":"remove_edge(u:V,v:V,&amp;)-instance-method","name":"remove_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if edge = edge?(u, v)\n  @vertices[u].delete(v)\n  @vertices[v].delete(u)\n  @size = @size - 1\n  edge\nelse\n  yield u, v\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L4","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  @size = @size - @vertices[v].size\n  each_adjacent(v) do |u|\n    @vertices[u].delete(v)\n  end\n  @vertices.delete(v)\nelse\n  raise(GraphError.new(\"The vertex #{v} is not in the graph.\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/GraphError","path":"CGL/GraphError.html","kind":"class","full_name":"CGL::GraphError","name":"GraphError","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/errors.cr","line_number":2,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/errors.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/EdgeError","kind":"class","full_name":"CGL::EdgeError","name":"EdgeError"}],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/GraphIterator","path":"CGL/GraphIterator.html","kind":"class","full_name":"CGL::GraphIterator(V)","name":"GraphIterator","abstract":true,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"},{"html_id":"github.com/RomainFranceschini/cgl/Enumerable","kind":"module","full_name":"Enumerable","name":"Enumerable"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/traversal/iterators.cr","line_number":8,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/Iterator","kind":"module","full_name":"Iterator","name":"Iterator"}],"extended_modules":[],"subclasses":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/BFSIterator","kind":"class","full_name":"CGL::BFSIterator(V)","name":"BFSIterator"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/DFSIterator","kind":"class","full_name":"CGL::DFSIterator(V)","name":"DFSIterator"}],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(graph:CGL::IGraph(V),start:V)-class-method","html_id":"new(graph:CGL::IGraph(V),start:V)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"V"}],"args_string":"(graph : CGL::IGraph(V), start : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L15","def":{"name":"new","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"},{"name":"start","doc":null,"default_value":"","external_name":"start","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = GraphIterator(V).allocate\n_.initialize(graph, start)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"has_next?-instance-method","html_id":"has_next?-instance-method","name":"has_next?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L25","def":{"name":"has_next?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"!@deque.empty?"}},{"id":"next-instance-method","html_id":"next-instance-method","name":"next","doc":"Returns the next element in this iterator, or `Iterator::Stop::INSTANCE` if there\nare no more elements.","summary":"<p>Returns the next element in this iterator, or <code>Iterator::Stop::INSTANCE</code> if there are no more elements.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/iterators.cr#L31","def":{"name":"next","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_next?\n  u = next_vertex\n  @graph.each_adjacent(u) do |v|\n    if @colors[v].white?\n      @colors[v] = Color::Gray\n      @deque.push(v)\n    end\n  end\n  @colors[u] = Color::Black\n  u\nelse\n  stop\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","path":"CGL/IGraph.html","kind":"module","full_name":"CGL::IGraph(V)","name":"IGraph","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cgl/igraph.cr","line_number":2,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr"},{"filename":"cgl/traversal/breadth_first_search.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/breadth_first_search.cr"},{"filename":"cgl/traversal/depth_first_search.cr","line_number":1,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/depth_first_search.cr"},{"filename":"cgl/traversal/visitor.cr","line_number":21,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/visitor.cr"},{"filename":"cgl/format/dot.cr","line_number":33,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/DiGraph","kind":"class","full_name":"CGL::DiGraph(V)","name":"DiGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Graph","kind":"class","full_name":"CGL::Graph(V)","name":"Graph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LabeledDiGraph","kind":"class","full_name":"CGL::LabeledDiGraph(V, L)","name":"LabeledDiGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LabeledGraph","kind":"class","full_name":"CGL::LabeledGraph(V, L)","name":"LabeledGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedDiGraph","kind":"class","full_name":"CGL::WeightedDiGraph(V, W)","name":"WeightedDiGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedGraph","kind":"class","full_name":"CGL::WeightedGraph(V, W)","name":"WeightedGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedLabeledDiGraph","kind":"class","full_name":"CGL::WeightedLabeledDiGraph(V, W, L)","name":"WeightedLabeledDiGraph"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedLabeledGraph","kind":"class","full_name":"CGL::WeightedLabeledGraph(V, W, L)","name":"WeightedLabeledGraph"}],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:IGraph)-instance-method","html_id":"==(other:IGraph)-instance-method","name":"==","doc":"Whether `self` is equal to *other*.","summary":"<p>Whether <code>self</code> is equal to <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IGraph"}],"args_string":"(other : IGraph)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L250","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"IGraph"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (size != other.size) || (order != other.order)\n  return false\nend\neach_vertex do |v|\n  if other.has_vertex?(v)\n  else\n    return false\n  end\n  each_edge_from(v) do |e|\n    if other.has_edge?(e)\n    else\n      return false\n    end\n  end\nend\ntrue\n"}},{"id":"==(other)-instance-method","html_id":"==(other)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"args_string":"(other)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L261","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"false"}},{"id":"accept(visitor:CGL::Visitor(V))-instance-method","html_id":"accept(visitor:CGL::Visitor(V))-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"Visitor(V)"}],"args_string":"(visitor : CGL::Visitor(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/visitor.cr#L22","def":{"name":"accept","args":[{"name":"visitor","doc":null,"default_value":"","external_name":"visitor","restriction":"Visitor(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if visitor.visit_vertices?\n  each_vertex do |v|\n    visitor.visit(v)\n  end\nend\nif visitor.visit_edges?\n  each_edge do |edge|\n    visitor.visit(edge)\n  end\nend\n"}},{"id":"add_edge(edge:CGL::AnyEdge(V))-instance-method","html_id":"add_edge(edge:CGL::AnyEdge(V))-instance-method","name":"add_edge","doc":"Add the given *edge* to the graph.\n\nSee `#add_edge(u : V, v : V, weight, label)`","summary":"<p>Add the given <em>edge</em> to the graph.</p>","abstract":true,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"AnyEdge(V)"}],"args_string":"(edge : CGL::AnyEdge(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L97","def":{"name":"add_edge","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"AnyEdge(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"add_edge(u:V,v:V,weight,label)-instance-method","html_id":"add_edge(u:V,v:V,weight,label)-instance-method","name":"add_edge","doc":"Add an edge between vertices *u* and *v*.\n\nThe given vertices are automatically added if they are not already part\nof the graph.\n\nA *weight* and/or a label can be associated to the edge if\nthe concrete class supports it.","summary":"<p>Add an edge between vertices <em>u</em> and <em>v</em>.</p>","abstract":true,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"args_string":"(u : V, v : V, weight, label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L92","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"add_vertex(v:V)-instance-method","html_id":"add_vertex(v:V)-instance-method","name":"add_vertex","doc":"Add a single vertex (a.k.a. node) to this graph.\n\n```\ng = CGL::Graph(String).new\ng.add_vertex(\"Hello\")\n```","summary":"<p>Add a single vertex (a.k.a.</p>","abstract":true,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L70","def":{"name":"add_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"breadth_first_search(fromvertex:V):Iterator(V)-instance-method","html_id":"breadth_first_search(fromvertex:V):Iterator(V)-instance-method","name":"breadth_first_search","doc":"Returns an iterator over vertices from the given source *v* in a\n**breadth**-first search (DFS).","summary":"<p>Returns an iterator over vertices from the given source <em>v</em> in a <strong>breadth</strong>-first search (DFS).</p>","abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"from","restriction":"V"}],"args_string":"(from vertex : V) : Iterator(V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/breadth_first_search.cr#L4","def":{"name":"breadth_first_search","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"from","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(V)","visibility":"Public","body":"BFSIterator(V).new(self, vertex)"}},{"id":"clear-instance-method","html_id":"clear-instance-method","name":"clear","doc":"Empties a `IGraph` and returns it.","summary":"<p>Empties a <code><a href=\"../CGL/IGraph.html\">IGraph</a></code> and returns it.</p>","abstract":true,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L196","def":{"name":"clear","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":"Returns a deep copy of `self`.\n\nSimilar to `#dup`, but duplicates the nodes and edges attributes as well.","summary":"<p>Returns a deep copy of <code>self</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L243","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"graph = ({{ @type }}).new(default_weight: self.default_weight, &self.label_block)\neach_edge do |e|\n  graph.add_edge(e.clone)\nend\ngraph\n"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":true,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L183","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"depth_first_search(fromvertex:V):Iterator(V)-instance-method","html_id":"depth_first_search(fromvertex:V):Iterator(V)-instance-method","name":"depth_first_search","doc":"Returns an iterator over vertices from the given source *v* in a\n**depth**-first search (DFS).","summary":"<p>Returns an iterator over vertices from the given source <em>v</em> in a <strong>depth</strong>-first search (DFS).</p>","abstract":false,"args":[{"name":"vertex","doc":null,"default_value":"","external_name":"from","restriction":"V"}],"args_string":"(from vertex : V) : Iterator(V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/depth_first_search.cr#L4","def":{"name":"depth_first_search","args":[{"name":"vertex","doc":null,"default_value":"","external_name":"from","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(V)","visibility":"Public","body":"DFSIterator(V).new(self, vertex)"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":true,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L199","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"dup-instance-method","html_id":"dup-instance-method","name":"dup","doc":"Returns a shallow copy of `self`.\n\nThe internal data structures are copied, not","summary":"<p>Returns a shallow copy of <code>self</code>.</p>","abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L236","def":{"name":"dup","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"({{ @type }}).new(self.each_edge, default_weight: self.default_weight, &self.label_block)"}},{"id":"each_adjacent(u:V):Iterator(V)-instance-method","html_id":"each_adjacent(u:V):Iterator(V)-instance-method","name":"each_adjacent","doc":"Returns an iterator over each vertex adjacent to *u* in the graph.","summary":"<p>Returns an iterator over each vertex adjacent to <em>u</em> in the graph.</p>","abstract":true,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V) : Iterator(V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L39","def":{"name":"each_adjacent","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(V)","visibility":"Public","body":""}},{"id":"each_adjacent(u:V,&:V->)-instance-method","html_id":"each_adjacent(u:V,&amp;:V-&gt;)-instance-method","name":"each_adjacent","doc":"Yields each vertex adjacent to *u* in the graph.\n\n```\ng = Graph(String).new(edges: [{\"b\", \"a\"}, {\"a\", \"c\"}])\ng.each_adjacent(\"a\") do |v|\n  puts v\nend\n```\nOutput:\n```\nb\nc\n```\n\nFor directed graphs, adjacent vertices are found following outgoing\nedges.\n\n```\ng = DiGraph(String).new(edges: [{\"b\", \"a\"}, {\"a\", \"c\"}])\ng.each_adjacent(\"a\") do |v|\n  puts v\nend\n```\nOutput:\n```\nc\n```","summary":"<p>Yields each vertex adjacent to <em>u</em> in the graph.</p>","abstract":true,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L36","def":{"name":"each_adjacent","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":""}},{"id":"each_edge:Iterator(CGL::AnyEdge(V))-instance-method","html_id":"each_edge:Iterator(CGL::AnyEdge(V))-instance-method","name":"each_edge","doc":"Returns an iterator over each edge in the graph.","summary":"<p>Returns an iterator over each edge in the graph.</p>","abstract":false,"args":[],"args_string":" : Iterator(CGL::AnyEdge(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L45","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(AnyEdge(V))","visibility":"Public","body":"EdgeIterator(V).new(self)"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":true,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L42","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":""}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":true,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L50","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":""}},{"id":"each_vertex(&:V->)-instance-method","html_id":"each_vertex(&amp;:V-&gt;)-instance-method","name":"each_vertex","doc":"Yields each vertex of the graph.","summary":"<p>Yields each vertex of the graph.</p>","abstract":true,"args":[],"args_string":"(& : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L4","def":{"name":"each_vertex","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":""}},{"id":"each_vertex:Iterator(V)-instance-method","html_id":"each_vertex:Iterator(V)-instance-method","name":"each_vertex","doc":"Returns an iterator over each vertex of the graph.","summary":"<p>Returns an iterator over each vertex of the graph.</p>","abstract":true,"args":[],"args_string":" : Iterator(V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L7","def":{"name":"each_vertex","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Iterator(V)","visibility":"Public","body":""}},{"id":"edge(u:V,v:V)-instance-method","html_id":"edge(u:V,v:V)-instance-method","name":"edge","doc":"Returns an edge data structure between *u* and *v* if present in the\ngraph, otherwise raises an `EdgeError`.","summary":"<p>Returns an edge data structure between <em>u</em> and <em>v</em> if present in the graph, otherwise raises an <code><a href=\"../CGL/EdgeError.html\">EdgeError</a></code>.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L144","def":{"name":"edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"edge(u, v) do\n  raise(EdgeError.new(\"No edge between #{u} and #{v} found\"))\nend"}},{"id":"edge(u:V,v:V,&)-instance-method","html_id":"edge(u:V,v:V,&amp;)-instance-method","name":"edge","doc":"Returns an edge data structure between *u* and *v* if present in the\ngraph, otherwise returns the value of the given block.","summary":"<p>Returns an edge data structure between <em>u</em> and <em>v</em> if present in the graph, otherwise returns the value of the given block.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L120","def":{"name":"edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_edge?(u, v)\n  unchecked_edge(u, v)\nelse\n  yield\nend"}},{"id":"edge?(u:V,v:V)-instance-method","html_id":"edge?(u:V,v:V)-instance-method","name":"edge?","doc":"Returns an edge data structure between *u* and *v* if present in the\ngraph, otherwise returns `nil`.","summary":"<p>Returns an edge data structure between <em>u</em> and <em>v</em> if present in the graph, otherwise returns <code>nil</code>.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L138","def":{"name":"edge?","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"edge(u, v) do\n  nil\nend"}},{"id":"edges:Array(CGL::AnyEdge(V))-instance-method","html_id":"edges:Array(CGL::AnyEdge(V))-instance-method","name":"edges","doc":"Returns an array of edges belonging to this graph.","summary":"<p>Returns an array of edges belonging to this graph.</p>","abstract":false,"args":[],"args_string":" : Array(CGL::AnyEdge(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L53","def":{"name":"edges","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AnyEdge(V))","visibility":"Public","body":"Array(AnyEdge(V)).new.tap do |ary|\n  self.each_edge do |e|\n    ary << e\n  end\nend"}},{"id":"empty?:Bool-instance-method","html_id":"empty?:Bool-instance-method","name":"empty?","doc":"Whether the graph is empty.","summary":"<p>Whether the graph is empty.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L114","def":{"name":"empty?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"self.size == 0"}},{"id":"has_edge?(u:V,v:V,weight,label):Bool-instance-method","html_id":"has_edge?(u:V,v:V,weight,label):Bool-instance-method","name":"has_edge?","doc":"Whether the edge between *u* and *v* with the given attributes\nis part of the graph.","summary":"<p>Whether the edge between <em>u</em> and <em>v</em> with the given attributes is part of the graph.</p>","abstract":true,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"args_string":"(u : V, v : V, weight, label) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L157","def":{"name":"has_edge?","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"has_edge?(u:V,v:V):Bool-instance-method","html_id":"has_edge?(u:V,v:V):Bool-instance-method","name":"has_edge?","doc":"Whether the edge between *u* and *v* is part of the graph.","summary":"<p>Whether the edge between <em>u</em> and <em>v</em> is part of the graph.</p>","abstract":true,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L160","def":{"name":"has_edge?","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"has_edge?(edge:Labelable):Bool-instance-method","html_id":"has_edge?(edge:Labelable):Bool-instance-method","name":"has_edge?","doc":"Whether the given edge is part of the graph.","summary":"<p>Whether the given edge is part of the graph.</p>","abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Labelable"}],"args_string":"(edge : Labelable) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L163","def":{"name":"has_edge?","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Labelable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"has_edge?(edge.u, edge.v, self.default_weight, edge.label)"}},{"id":"has_edge?(edge:Weightable):Bool-instance-method","html_id":"has_edge?(edge:Weightable):Bool-instance-method","name":"has_edge?","doc":"Whether the given edge is part of the graph.","summary":"<p>Whether the given edge is part of the graph.</p>","abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Weightable"}],"args_string":"(edge : Weightable) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L168","def":{"name":"has_edge?","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"Weightable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"has_edge?(edge.u, edge.v, edge.weight, self.default_label)"}},{"id":"has_edge?(edge:CGL::AnyEdge(V)):Bool-instance-method","html_id":"has_edge?(edge:CGL::AnyEdge(V)):Bool-instance-method","name":"has_edge?","doc":"Whether the given edge is part of the graph.","summary":"<p>Whether the given edge is part of the graph.</p>","abstract":false,"args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"AnyEdge(V)"}],"args_string":"(edge : CGL::AnyEdge(V)) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L173","def":{"name":"has_edge?","args":[{"name":"edge","doc":null,"default_value":"","external_name":"edge","restriction":"AnyEdge(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"has_edge?(edge.u, edge.v)"}},{"id":"has_vertex?(v:V):Bool-instance-method","html_id":"has_vertex?(v:V):Bool-instance-method","name":"has_vertex?","doc":"Whether the given vertex *v* is part of the graph.","summary":"<p>Whether the given vertex <em>v</em> is part of the graph.</p>","abstract":true,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L153","def":{"name":"has_vertex?","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":""}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L266","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = hasher.result\neach_edge do |edge|\n  copy = hasher\n  copy = edge.hash(copy)\n  result = result &+ copy.result\nend\nresult.hash(hasher)\n"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":true,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L188","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"label_of(u:V,v:V)-instance-method","html_id":"label_of(u:V,v:V)-instance-method","name":"label_of","doc":"Returns the label associated with the given edge if it exists, otherwise\nreturns `nil`.","summary":"<p>Returns the label associated with the given edge if it exists, otherwise returns <code>nil</code>.</p>","abstract":true,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L134","def":{"name":"label_of","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"order:Int32-instance-method","html_id":"order:Int32-instance-method","name":"order","doc":"Returns the number of vertices in `self`.","summary":"<p>Returns the number of vertices in <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L111","def":{"name":"order","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":true,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L193","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"remove_edge(u:V,v:V)-instance-method","html_id":"remove_edge(u:V,v:V)-instance-method","name":"remove_edge","doc":"Deletes the given edge and returns it, otherwise returns `nil`.","summary":"<p>Deletes the given edge and returns it, otherwise returns <code>nil</code>.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L103","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"remove_edge(u, v) do\n  nil\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":true,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L83","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"size:Int32-instance-method","html_id":"size:Int32-instance-method","name":"size","doc":"Returns the number of edges in `self`.","summary":"<p>Returns the number of edges in <code>self</code>.</p>","abstract":true,"args":[],"args_string":" : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L108","def":{"name":"size","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":""}},{"id":"subgraph(edges:Enumerable(CGL::AnyEdge(V)),*,clone:Bool=false):CGL::IGraph(V)-instance-method","html_id":"subgraph(edges:Enumerable(CGL::AnyEdge(V)),*,clone:Bool=false):CGL::IGraph(V)-instance-method","name":"subgraph","doc":"Returns a subgraph containing the given *edges*.\n\nIf *copy* is set to `true`, the vertices as well as edge attributes are\ndeep copies, otherwise they are shallow copies.","summary":"<p>Returns a subgraph containing the given <em>edges</em>.</p>","abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"clone","doc":null,"default_value":"false","external_name":"clone","restriction":"Bool"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, clone : Bool = <span class=\"n\">false</span>) : CGL::IGraph(V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L223","def":{"name":"subgraph","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"clone","doc":null,"default_value":"false","external_name":"clone","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"IGraph(V)","visibility":"Public","body":"subgraph = ({{ @type }}).new(default_weight: self.default_weight, &self.label_block)\nedges.each do |edge|\n  if has_edge?(edge)\n    subgraph.add_edge(clone ? edge.clone : edge)\n  end\nend\nsubgraph\n"}},{"id":"subgraph(vertices:Enumerable(V),*,clone:Bool=false):CGL::IGraph(V)-instance-method","html_id":"subgraph(vertices:Enumerable(V),*,clone:Bool=false):CGL::IGraph(V)-instance-method","name":"subgraph","doc":"Returns a subgraph containing the given *vertices*\nas well as the existing edges between those vertices.\n\nIf *copy* is set to `true`, the vertices as well as edge attributes are\ndeep copies, otherwise they are shallow copies.","summary":"<p>Returns a subgraph containing the given <em>vertices</em> as well as the existing edges between those vertices.</p>","abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"","external_name":"vertices","restriction":"Enumerable(V)"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"clone","doc":null,"default_value":"false","external_name":"clone","restriction":"Bool"}],"args_string":"(vertices : Enumerable(V), *, clone : Bool = <span class=\"n\">false</span>) : CGL::IGraph(V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L206","def":{"name":"subgraph","args":[{"name":"vertices","doc":null,"default_value":"","external_name":"vertices","restriction":"Enumerable(V)"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"clone","doc":null,"default_value":"false","external_name":"clone","restriction":"Bool"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"IGraph(V)","visibility":"Public","body":"subgraph = ({{ @type }}).new(default_weight: self.default_weight, &self.label_block)\nto_include = vertices.to_set\nvertices.each do |v|\n  each_edge_from(v) do |edge|\n    if to_include.includes?(edge.v)\n      subgraph.add_edge(clone ? edge.clone : edge)\n    end\n  end\nend\nsubgraph\n"}},{"id":"to_a:Array(CGL::AnyEdge(V))-instance-method","html_id":"to_a:Array(CGL::AnyEdge(V))-instance-method","name":"to_a","doc":"See `#edges`.","summary":"<p>See <code><a href=\"../CGL/IGraph.html#edges:Array(CGL::AnyEdge(V))-instance-method\">#edges</a></code>.</p>","abstract":false,"args":[],"args_string":" : Array(CGL::AnyEdge(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L60","def":{"name":"to_a","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(AnyEdge(V))","visibility":"Public","body":"self.edges"}},{"id":"to_dot(path:String)-instance-method","html_id":"to_dot(path:String)-instance-method","name":"to_dot","doc":"Generates a DOT file representing the graph at the given *path*.","summary":"<p>Generates a DOT file representing the graph at the given <em>path</em>.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr#L35","def":{"name":"to_dot","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if (File.extname(path)).empty?\n  path = \"#{path}.dot\"\nend\nFile.open(path, \"w+\") do |file|\n  to_dot(file)\nend\n"}},{"id":"to_dot(io:IO)-instance-method","html_id":"to_dot(io:IO)-instance-method","name":"to_dot","doc":"Generates a DOT representation of the graph using the given `IO`.","summary":"<p>Generates a DOT representation of the graph using the given <code>IO</code>.</p>","abstract":false,"args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"args_string":"(io : IO)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/format/dot.cr#L41","def":{"name":"to_dot","args":[{"name":"io","doc":null,"default_value":"","external_name":"io","restriction":"IO"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(DotVisitor.new(self, io)).generate"}},{"id":"weight_of(u:V,v:V)-instance-method","html_id":"weight_of(u:V,v:V)-instance-method","name":"weight_of","doc":"Returns the weight associated with the given edge if it exists, otherwise\nreturns `nil`.","summary":"<p>Returns the weight associated with the given edge if it exists, otherwise returns <code>nil</code>.</p>","abstract":true,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/igraph.cr#L130","def":{"name":"weight_of","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Labelable","path":"CGL/Labelable.html","kind":"module","full_name":"CGL::Labelable(L)","name":"Labelable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cgl/edges.cr","line_number":55,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/LDiEdge","kind":"struct","full_name":"CGL::LDiEdge(V, L)","name":"LDiEdge"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LEdge","kind":"struct","full_name":"CGL::LEdge(V, L)","name":"LEdge"}],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u,v,label)-class-method","html_id":"new(u,v,label)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"args_string":"(u, v, label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L58","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(u, v, label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:Labelable)-instance-method","html_id":"==(other:Labelable)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Labelable"}],"args_string":"(other : Labelable)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L70","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Labelable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(super(other)) && (@label == other.label)"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L74","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@u.clone, @v.clone, @label.clone)"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L65","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = super(hasher)\n@label.hash(hasher)\n"}},{"id":"label:L?-instance-method","html_id":"label:L?-instance-method","name":"label","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : L?","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L56","def":{"name":"label","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"L | ::Nil","visibility":"Public","body":"@label"}},{"id":"label=(label:L?)-instance-method","html_id":"label=(label:L?)-instance-method","name":"label=","doc":null,"summary":null,"abstract":false,"args":[{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(label : L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L56","def":{"name":"label=","args":[{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@label = label"}},{"id":"to_tuple-instance-method","html_id":"to_tuple-instance-method","name":"to_tuple","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L61","def":{"name":"to_tuple","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@u, @v, @label}"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LabeledDiGraph","path":"CGL/LabeledDiGraph.html","kind":"class","full_name":"CGL::LabeledDiGraph(V, L)","name":"LabeledDiGraph","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/digraph.cr","line_number":7,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:Nil?=nil,&block:->L?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:Nil?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : Nil? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = LabeledDiGraph(V, L).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:Nil?=nil,default_label:L?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:Nil?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : Nil? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LabeledDiGraph(V, L).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,&block:->L?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : Nil? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = LabeledDiGraph(V, L).allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,default_label:L?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : Nil? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LabeledDiGraph(V, L).allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:L?=self.default_label)-instance-method","html_id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:L?=self.default_label)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W = <span class=\"k\">self</span>.default_weight, label : L? = <span class=\"k\">self</span>.default_label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"adj = @vertices[u]\nif !(adj.has_key?(v))\n  add_vertex(v)\n  @size = @size + 1\n  adj[v] = {weight, label}\nend\n"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(in_degree_of(v)) + (out_degree_of(v))"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"true"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":false,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_vertex do |u|\n  each_adjacent(u) do |v|\n    yield unchecked_edge(u, v)\n  end\nend"}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(u) do |v|\n  yield unchecked_edge(u, v)\nend"}},{"id":"each_predecessor(v:V,&:V->)-instance-method","html_id":"each_predecessor(v:V,&amp;:V-&gt;)-instance-method","name":"each_predecessor","doc":"Yields each predecessor of *u* in the graph.","summary":"<p>Yields each predecessor of <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V, & : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"each_predecessor","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      yield u\n    end\n  end\nend"}},{"id":"each_successor(u:V,&block:V->)-instance-method","html_id":"each_successor(u:V,&amp;block:V-&gt;)-instance-method","name":"each_successor","doc":"Yields each successor of *u* in the graph.","summary":"<p>Yields each successor of <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, &block : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"each_successor","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(&block)"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"size = 0\nif has_vertex?(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      size = size + 1\n    end\n  end\nend\nsize\n"}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if has_vertex?(v)\nelse\n  return 0\nend\n@vertices[v].size\n"}},{"id":"remove_edge(u:V,v:V,&)-instance-method","html_id":"remove_edge(u:V,v:V,&amp;)-instance-method","name":"remove_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if edge = edge?(u, v)\n  @vertices[u].delete(v)\n  @size = @size - 1\n  edge\nelse\n  yield u, v\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L9","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  @size = @size - @vertices[v].size\n  @vertices.delete(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      @vertices[u].delete(v)\n      @size = @size - 1\n    end\n  end\nelse\n  raise(GraphError.new(\"The vertex #{v} is not in the graph.\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LabeledGraph","path":"CGL/LabeledGraph.html","kind":"class","full_name":"CGL::LabeledGraph(V, L)","name":"LabeledGraph","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/graph.cr","line_number":7,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:Nil?=nil,&block:->L?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:Nil?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : Nil? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = LabeledGraph(V, L).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:Nil?=nil,default_label:L?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:Nil?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : Nil? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LabeledGraph(V, L).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,&block:->L?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : Nil? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = LabeledGraph(V, L).allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,default_label:L?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:Nil?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : Nil? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LabeledGraph(V, L).allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:L?=self.default_label)-instance-method","html_id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:L?=self.default_label)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W = <span class=\"k\">self</span>.default_weight, label : L? = <span class=\"k\">self</span>.default_label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_edge?(u, v)\nelse\n  @size = @size + 1\n  @vertices[u][v] = {weight, label}\n  @vertices[v][u] = {weight, label}\nend"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if has_vertex?(v)\nelse\n  return 0\nend\nadj = @vertices[v]\nsize = adj.size\nif adj.has_key?(v)\n  size = size + 1\nend\nsize\n"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":false,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"visited = Set(AnyEdge(V)).new\neach_vertex do |u|\n  each_adjacent(u) do |v|\n    edge = unchecked_edge(u, v)\n    if !(visited.includes?(edge))\n      visited << edge\n      yield edge\n    end\n  end\nend\n"}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(u) do |v|\n  yield unchecked_edge(u, v)\nend"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"degree_of(v)"}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"degree_of(v)"}},{"id":"remove_edge(u:V,v:V,&)-instance-method","html_id":"remove_edge(u:V,v:V,&amp;)-instance-method","name":"remove_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if edge = edge?(u, v)\n  @vertices[u].delete(v)\n  @vertices[v].delete(u)\n  @size = @size - 1\n  edge\nelse\n  yield u, v\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L9","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  @size = @size - @vertices[v].size\n  each_adjacent(v) do |u|\n    @vertices[u].delete(v)\n  end\n  @vertices.delete(v)\nelse\n  raise(GraphError.new(\"The vertex #{v} is not in the graph.\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LDiEdge","path":"CGL/LDiEdge.html","kind":"struct","full_name":"CGL::LDiEdge(V, L)","name":"LDiEdge","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Labelable","kind":"module","full_name":"CGL::Labelable","name":"Labelable"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Directed","kind":"module","full_name":"CGL::Directed","name":"Directed"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"},{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/RomainFranceschini/cgl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/edges.cr","line_number":131,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Directed","kind":"module","full_name":"CGL::Directed","name":"Directed"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Labelable","kind":"module","full_name":"CGL::Labelable","name":"Labelable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u,v,label)-class-method","html_id":"new(u,v,label)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"args_string":"(u, v, label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L58","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LDiEdge(V, L).allocate\n_.initialize(u, v, label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LEdge","path":"CGL/LEdge.html","kind":"struct","full_name":"CGL::LEdge(V, L)","name":"LEdge","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Labelable","kind":"module","full_name":"CGL::Labelable","name":"Labelable"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Undirected","kind":"module","full_name":"CGL::Undirected","name":"Undirected"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"},{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/RomainFranceschini/cgl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/edges.cr","line_number":117,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Labelable","kind":"module","full_name":"CGL::Labelable","name":"Labelable"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Undirected","kind":"module","full_name":"CGL::Undirected","name":"Undirected"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u,v,label)-class-method","html_id":"new(u,v,label)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"args_string":"(u, v, label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L58","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"label","doc":null,"default_value":"","external_name":"label","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = LEdge(V, L).allocate\n_.initialize(u, v, label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Undirected","path":"CGL/Undirected.html","kind":"module","full_name":"CGL::Undirected(V)","name":"Undirected","abstract":false,"superclass":null,"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"}],"locations":[{"filename":"cgl/edges.cr","line_number":18,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"}],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Edge","kind":"struct","full_name":"CGL::Edge(V)","name":"Edge"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/LEdge","kind":"struct","full_name":"CGL::LEdge(V, L)","name":"LEdge"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WEdge","kind":"struct","full_name":"CGL::WEdge(V, W)","name":"WEdge"}],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[{"id":"==(other:AnyEdge)-instance-method","html_id":"==(other:AnyEdge)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyEdge"}],"args_string":"(other : AnyEdge)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L21","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"AnyEdge"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"((@u == other.u) && (@v == other.v)) || ((@v == other.u) && (@u == other.v))"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":"See `Object#hash(hasher)`","summary":"<p>See <code>Object#hash(hasher)</code></p>","abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L26","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"result = hasher.result\n{@u, @v}.each do |v|\n  copy = hasher\n  copy = v.hash(copy)\n  result = result &+ copy.result\nend\nresult.hash(hasher)\n"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Visitor","path":"CGL/Visitor.html","kind":"module","full_name":"CGL::Visitor(V)","name":"Visitor","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cgl/traversal/visitor.cr","line_number":5,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/visitor.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/DotVisitor","kind":"class","full_name":"CGL::DotVisitor(V)","name":"DotVisitor"}],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":"A 'Visitor' provides\n\nNote: if you care about ordering, use an iterator instead.","summary":"<p>A 'Visitor' provides</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"accept(graph:CGL::IGraph(V))-instance-method","html_id":"accept(graph:CGL::IGraph(V))-instance-method","name":"accept","doc":null,"summary":null,"abstract":false,"args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"}],"args_string":"(graph : CGL::IGraph(V))","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/visitor.cr#L16","def":{"name":"accept","args":[{"name":"graph","doc":null,"default_value":"","external_name":"graph","restriction":"IGraph(V)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"visitable.accept(self)"}},{"id":"visit(visitable)-instance-method","html_id":"visit(visitable)-instance-method","name":"visit","doc":null,"summary":null,"abstract":true,"args":[{"name":"visitable","doc":null,"default_value":"","external_name":"visitable","restriction":""}],"args_string":"(visitable)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/visitor.cr#L6","def":{"name":"visit","args":[{"name":"visitable","doc":null,"default_value":"","external_name":"visitable","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":""}},{"id":"visit_edges?:Bool-instance-method","html_id":"visit_edges?:Bool-instance-method","name":"visit_edges?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/visitor.cr#L12","def":{"name":"visit_edges?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"true"}},{"id":"visit_vertices?:Bool-instance-method","html_id":"visit_vertices?:Bool-instance-method","name":"visit_vertices?","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/traversal/visitor.cr#L8","def":{"name":"visit_vertices?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WDiEdge","path":"CGL/WDiEdge.html","kind":"struct","full_name":"CGL::WDiEdge(V, W)","name":"WDiEdge","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Weightable","kind":"module","full_name":"CGL::Weightable","name":"Weightable"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Directed","kind":"module","full_name":"CGL::Directed","name":"Directed"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"},{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/RomainFranceschini/cgl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/edges.cr","line_number":126,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Directed","kind":"module","full_name":"CGL::Directed","name":"Directed"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Weightable","kind":"module","full_name":"CGL::Weightable","name":"Weightable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u,v,weight)-class-method","html_id":"new(u,v,weight)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""}],"args_string":"(u, v, weight)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L82","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WDiEdge(V, W).allocate\n_.initialize(u, v, weight)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WEdge","path":"CGL/WEdge.html","kind":"struct","full_name":"CGL::WEdge(V, W)","name":"WEdge","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Weightable","kind":"module","full_name":"CGL::Weightable","name":"Weightable"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Undirected","kind":"module","full_name":"CGL::Undirected","name":"Undirected"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/AnyEdge","kind":"module","full_name":"CGL::AnyEdge","name":"AnyEdge"},{"html_id":"github.com/RomainFranceschini/cgl/Struct","kind":"struct","full_name":"Struct","name":"Struct"},{"html_id":"github.com/RomainFranceschini/cgl/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/edges.cr","line_number":112,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/Undirected","kind":"module","full_name":"CGL::Undirected","name":"Undirected"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Weightable","kind":"module","full_name":"CGL::Weightable","name":"Weightable"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u,v,weight)-class-method","html_id":"new(u,v,weight)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""}],"args_string":"(u, v, weight)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L82","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WEdge(V, W).allocate\n_.initialize(u, v, weight)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/Weightable","path":"CGL/Weightable.html","kind":"module","full_name":"CGL::Weightable(T)","name":"Weightable","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"cgl/edges.cr","line_number":79,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/WDiEdge","kind":"struct","full_name":"CGL::WDiEdge(V, W)","name":"WDiEdge"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WEdge","kind":"struct","full_name":"CGL::WEdge(V, W)","name":"WEdge"}],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(u,v,weight)-class-method","html_id":"new(u,v,weight)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""}],"args_string":"(u, v, weight)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L82","def":{"name":"new","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":""},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":""},{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(u, v, weight)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:Weightable)-instance-method","html_id":"==(other:Weightable)-instance-method","name":"==","doc":null,"summary":null,"abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Weightable"}],"args_string":"(other : Weightable)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L99","def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"Weightable"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(super(other)) && (@weight == other.weight)"}},{"id":"clone-instance-method","html_id":"clone-instance-method","name":"clone","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L103","def":{"name":"clone","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"self.class.new(@u.clone, @v.clone, @weight.clone)"}},{"id":"hash(hasher)-instance-method","html_id":"hash(hasher)-instance-method","name":"hash","doc":null,"summary":null,"abstract":false,"args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"args_string":"(hasher)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L94","def":{"name":"hash","args":[{"name":"hasher","doc":null,"default_value":"","external_name":"hasher","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"hasher = super(hasher)\n@weight.hash(hasher)\n"}},{"id":"to_tuple-instance-method","html_id":"to_tuple-instance-method","name":"to_tuple","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L90","def":{"name":"to_tuple","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"{@u, @v, @weight}"}},{"id":"weight:T-instance-method","html_id":"weight:T-instance-method","name":"weight","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : T","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L80","def":{"name":"weight","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"T","visibility":"Public","body":"@weight"}},{"id":"weight=(weight:T)-instance-method","html_id":"weight=(weight:T)-instance-method","name":"weight=","doc":null,"summary":null,"abstract":false,"args":[{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"T"}],"args_string":"(weight : T)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/edges.cr#L80","def":{"name":"weight=","args":[{"name":"weight","doc":null,"default_value":"","external_name":"weight","restriction":"T"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@weight = weight"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedDiGraph","path":"CGL/WeightedDiGraph.html","kind":"class","full_name":"CGL::WeightedDiGraph(V, W)","name":"WeightedDiGraph","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/digraph.cr","line_number":12,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:W?=nil,&block:->Nil?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:W?=nil,&amp;block:-&gt;Nil?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(Nil?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> Nil?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = WeightedDiGraph(V, W).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:W?=nil,default_label:Nil?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:W?=nil,default_label:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(Nil?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, default_label : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedDiGraph(V, W).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&block:->Nil?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&amp;block:-&gt;Nil?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> Nil?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = WeightedDiGraph(V, W).allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:Nil?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, default_label : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedDiGraph(V, W).allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:Nil?=self.default_label)-instance-method","html_id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:Nil?=self.default_label)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W = <span class=\"k\">self</span>.default_weight, label : Nil? = <span class=\"k\">self</span>.default_label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"adj = @vertices[u]\nif !(adj.has_key?(v))\n  add_vertex(v)\n  @size = @size + 1\n  adj[v] = {weight, label}\nend\n"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(in_degree_of(v)) + (out_degree_of(v))"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"true"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":false,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_vertex do |u|\n  each_adjacent(u) do |v|\n    yield unchecked_edge(u, v)\n  end\nend"}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(u) do |v|\n  yield unchecked_edge(u, v)\nend"}},{"id":"each_predecessor(v:V,&:V->)-instance-method","html_id":"each_predecessor(v:V,&amp;:V-&gt;)-instance-method","name":"each_predecessor","doc":"Yields each predecessor of *u* in the graph.","summary":"<p>Yields each predecessor of <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V, & : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"each_predecessor","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      yield u\n    end\n  end\nend"}},{"id":"each_successor(u:V,&block:V->)-instance-method","html_id":"each_successor(u:V,&amp;block:V-&gt;)-instance-method","name":"each_successor","doc":"Yields each successor of *u* in the graph.","summary":"<p>Yields each successor of <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, &block : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"each_successor","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(&block)"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"size = 0\nif has_vertex?(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      size = size + 1\n    end\n  end\nend\nsize\n"}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if has_vertex?(v)\nelse\n  return 0\nend\n@vertices[v].size\n"}},{"id":"remove_edge(u:V,v:V,&)-instance-method","html_id":"remove_edge(u:V,v:V,&amp;)-instance-method","name":"remove_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if edge = edge?(u, v)\n  @vertices[u].delete(v)\n  @size = @size - 1\n  edge\nelse\n  yield u, v\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L14","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  @size = @size - @vertices[v].size\n  @vertices.delete(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      @vertices[u].delete(v)\n      @size = @size - 1\n    end\n  end\nelse\n  raise(GraphError.new(\"The vertex #{v} is not in the graph.\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedGraph","path":"CGL/WeightedGraph.html","kind":"class","full_name":"CGL::WeightedGraph(V, W)","name":"WeightedGraph","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/graph.cr","line_number":12,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:W?=nil,&block:->Nil?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:W?=nil,&amp;block:-&gt;Nil?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(Nil?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> Nil?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = WeightedGraph(V, W).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:W?=nil,default_label:Nil?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(Nil?)?=nil,*,default_weight:W?=nil,default_label:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(Nil?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, default_label : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedGraph(V, W).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&block:->Nil?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&amp;block:-&gt;Nil?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> Nil?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = WeightedGraph(V, W).allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:Nil?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:Nil?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, default_label : Nil? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedGraph(V, W).allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:Nil?=self.default_label)-instance-method","html_id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:Nil?=self.default_label)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W = <span class=\"k\">self</span>.default_weight, label : Nil? = <span class=\"k\">self</span>.default_label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_edge?(u, v)\nelse\n  @size = @size + 1\n  @vertices[u][v] = {weight, label}\n  @vertices[v][u] = {weight, label}\nend"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if has_vertex?(v)\nelse\n  return 0\nend\nadj = @vertices[v]\nsize = adj.size\nif adj.has_key?(v)\n  size = size + 1\nend\nsize\n"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":false,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"visited = Set(AnyEdge(V)).new\neach_vertex do |u|\n  each_adjacent(u) do |v|\n    edge = unchecked_edge(u, v)\n    if !(visited.includes?(edge))\n      visited << edge\n      yield edge\n    end\n  end\nend\n"}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(u) do |v|\n  yield unchecked_edge(u, v)\nend"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"degree_of(v)"}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"degree_of(v)"}},{"id":"remove_edge(u:V,v:V,&)-instance-method","html_id":"remove_edge(u:V,v:V,&amp;)-instance-method","name":"remove_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if edge = edge?(u, v)\n  @vertices[u].delete(v)\n  @vertices[v].delete(u)\n  @size = @size - 1\n  edge\nelse\n  yield u, v\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L14","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  @size = @size - @vertices[v].size\n  each_adjacent(v) do |u|\n    @vertices[u].delete(v)\n  end\n  @vertices.delete(v)\nelse\n  raise(GraphError.new(\"The vertex #{v} is not in the graph.\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedLabeledDiGraph","path":"CGL/WeightedLabeledDiGraph.html","kind":"class","full_name":"CGL::WeightedLabeledDiGraph(V, W, L)","name":"WeightedLabeledDiGraph","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/digraph.cr","line_number":17,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,&block:->L?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = WeightedLabeledDiGraph(V, W, L).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,default_label:L?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedLabeledDiGraph(V, W, L).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&block:->L?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = WeightedLabeledDiGraph(V, W, L).allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:L?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedLabeledDiGraph(V, W, L).allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:L?=self.default_label)-instance-method","html_id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:L?=self.default_label)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W = <span class=\"k\">self</span>.default_weight, label : L? = <span class=\"k\">self</span>.default_label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"adj = @vertices[u]\nif !(adj.has_key?(v))\n  add_vertex(v)\n  @size = @size + 1\n  adj[v] = {weight, label}\nend\n"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"(in_degree_of(v)) + (out_degree_of(v))"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"true"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":false,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_vertex do |u|\n  each_adjacent(u) do |v|\n    yield unchecked_edge(u, v)\n  end\nend"}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(u) do |v|\n  yield unchecked_edge(u, v)\nend"}},{"id":"each_predecessor(v:V,&:V->)-instance-method","html_id":"each_predecessor(v:V,&amp;:V-&gt;)-instance-method","name":"each_predecessor","doc":"Yields each predecessor of *u* in the graph.","summary":"<p>Yields each predecessor of <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V, & : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"each_predecessor","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      yield u\n    end\n  end\nend"}},{"id":"each_successor(u:V,&block:V->)-instance-method","html_id":"each_successor(u:V,&amp;block:V-&gt;)-instance-method","name":"each_successor","doc":"Yields each successor of *u* in the graph.","summary":"<p>Yields each successor of <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, &block : V -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"each_successor","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(V -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(&block)"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"size = 0\nif has_vertex?(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      size = size + 1\n    end\n  end\nend\nsize\n"}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if has_vertex?(v)\nelse\n  return 0\nend\n@vertices[v].size\n"}},{"id":"remove_edge(u:V,v:V,&)-instance-method","html_id":"remove_edge(u:V,v:V,&amp;)-instance-method","name":"remove_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if edge = edge?(u, v)\n  @vertices[u].delete(v)\n  @size = @size - 1\n  edge\nelse\n  yield u, v\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/digraph.cr#L19","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  @size = @size - @vertices[v].size\n  @vertices.delete(v)\n  each_vertex do |u|\n    if @vertices[u].has_key?(v)\n      @vertices[u].delete(v)\n      @size = @size - 1\n    end\n  end\nelse\n  raise(GraphError.new(\"The vertex #{v} is not in the graph.\"))\nend"}}],"macros":[],"types":[]},{"html_id":"github.com/RomainFranceschini/cgl/CGL/WeightedLabeledGraph","path":"CGL/WeightedLabeledGraph.html","kind":"class","full_name":"CGL::WeightedLabeledGraph(V, W, L)","name":"WeightedLabeledGraph","abstract":false,"superclass":{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"},{"html_id":"github.com/RomainFranceschini/cgl/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"github.com/RomainFranceschini/cgl/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"cgl/graph.cr","line_number":17,"url":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr"}],"repository_name":"github.com/RomainFranceschini/cgl","program":false,"enum":false,"alias":false,"aliased":"","const":false,"constants":[],"included_modules":[{"html_id":"github.com/RomainFranceschini/cgl/CGL/AdjacencyHash","kind":"module","full_name":"CGL::AdjacencyHash","name":"AdjacencyHash"},{"html_id":"github.com/RomainFranceschini/cgl/CGL/IGraph","kind":"module","full_name":"CGL::IGraph","name":"IGraph"}],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"github.com/RomainFranceschini/cgl/CGL","kind":"module","full_name":"CGL","name":"CGL"},"doc":null,"summary":null,"class_methods":[],"constructors":[{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,&block:->L?)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L44","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":4,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = WeightedLabeledGraph(V, W, L).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,default_label:L?=nil)-class-method","html_id":"new(vertices:Enumerable(V)?=nil,edges:Enumerable(Tuple(V,V))?=nil,weights:Enumerable(W)?=nil,labels:Enumerable(L?)?=nil,*,default_weight:W?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(vertices : Enumerable(V)? = <span class=\"n\">nil</span>, edges : Enumerable(Tuple(V, V))? = <span class=\"n\">nil</span>, weights : Enumerable(W)? = <span class=\"n\">nil</span>, labels : Enumerable(L?)? = <span class=\"n\">nil</span>, *, default_weight : W? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L57","def":{"name":"new","args":[{"name":"vertices","doc":null,"default_value":"nil","external_name":"vertices","restriction":"Enumerable(V) | ::Nil"},{"name":"edges","doc":null,"default_value":"nil","external_name":"edges","restriction":"Enumerable(Tuple(V, V)) | ::Nil"},{"name":"weights","doc":null,"default_value":"nil","external_name":"weights","restriction":"Enumerable(W) | ::Nil"},{"name":"labels","doc":null,"default_value":"nil","external_name":"labels","restriction":"Enumerable(L | ::Nil) | ::Nil"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":4,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedLabeledGraph(V, W, L).allocate\n_.initialize(vertices, edges, weights, labels, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&block:->L?)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,&amp;block:-&gt;L?)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, &block :  -> L?)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L70","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"}],"double_splat":null,"splat_index":1,"yields":0,"block_arg":{"name":"block","doc":null,"default_value":"","external_name":"block","restriction":"(-> L | ::Nil)"},"return_type":"","visibility":"Public","body":"_ = WeightedLabeledGraph(V, W, L).allocate\n_.initialize(edges, default_weight: default_weight, &block) do\n  yield\nend\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:L?=nil)-class-method","html_id":"new(edges:Enumerable(CGL::AnyEdge(V)),*,default_weight:W?=nil,default_label:L?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"args_string":"(edges : Enumerable(CGL::AnyEdge(V)), *, default_weight : W? = <span class=\"n\">nil</span>, default_label : L? = <span class=\"n\">nil</span>)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/representations/adjacency.cr#L79","def":{"name":"new","args":[{"name":"edges","doc":null,"default_value":"","external_name":"edges","restriction":"Enumerable(AnyEdge(V))"},{"name":"","doc":null,"default_value":"","external_name":"","restriction":""},{"name":"default_weight","doc":null,"default_value":"nil","external_name":"default_weight","restriction":"W | ::Nil"},{"name":"default_label","doc":null,"default_value":"nil","external_name":"default_label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":1,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = WeightedLabeledGraph(V, W, L).allocate\n_.initialize(edges, default_weight: default_weight, default_label: default_label)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:L?=self.default_label)-instance-method","html_id":"add_edge(u:V,v:V,weight:W=self.default_weight,label:L?=self.default_label)-instance-method","name":"add_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"args_string":"(u : V, v : V, weight : W = <span class=\"k\">self</span>.default_weight, label : L? = <span class=\"k\">self</span>.default_label)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"add_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"},{"name":"weight","doc":null,"default_value":"self.default_weight","external_name":"weight","restriction":"W"},{"name":"label","doc":null,"default_value":"self.default_label","external_name":"label","restriction":"L | ::Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_edge?(u, v)\nelse\n  @size = @size + 1\n  @vertices[u][v] = {weight, label}\n  @vertices[v][u] = {weight, label}\nend"}},{"id":"degree_of(v:V):Int32-instance-method","html_id":"degree_of(v:V):Int32-instance-method","name":"degree_of","doc":"Returns the degree of the given vertex *v*.\n\nFor directed graphs, the value equals `#out_degree_of`.\n\nFor undirected graphs, the value is the sum of `#in_degree_of` and\n`#in_degree_of`.","summary":"<p>Returns the degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"if has_vertex?(v)\nelse\n  return 0\nend\nadj = @vertices[v]\nsize = adj.size\nif adj.has_key?(v)\n  size = size + 1\nend\nsize\n"}},{"id":"directed?:Bool-instance-method","html_id":"directed?:Bool-instance-method","name":"directed?","doc":"Whether `self` is directed.","summary":"<p>Whether <code>self</code> is directed.</p>","abstract":false,"args":[],"args_string":" : Bool","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"directed?","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Bool","visibility":"Public","body":"false"}},{"id":"each_edge(&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge(&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge","doc":"Yields each edges in the graph.","summary":"<p>Yields each edges in the graph.</p>","abstract":false,"args":[],"args_string":"(& : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"each_edge","args":[],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"visited = Set(AnyEdge(V)).new\neach_vertex do |u|\n  each_adjacent(u) do |v|\n    edge = unchecked_edge(u, v)\n    if !(visited.includes?(edge))\n      visited << edge\n      yield edge\n    end\n  end\nend\n"}},{"id":"each_edge_from(u:V,&:CGL::AnyEdge(V)->)-instance-method","html_id":"each_edge_from(u:V,&amp;:CGL::AnyEdge(V)-&gt;)-instance-method","name":"each_edge_from","doc":"Yields each edge incident to *u* in the graph.","summary":"<p>Yields each edge incident to <em>u</em> in the graph.</p>","abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"args_string":"(u : V, & : CGL::AnyEdge(V) -> )","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"each_edge_from","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":1,"block_arg":{"name":"","doc":null,"default_value":"","external_name":"","restriction":"(AnyEdge(V) -> )"},"return_type":"","visibility":"Public","body":"each_adjacent(u) do |v|\n  yield unchecked_edge(u, v)\nend"}},{"id":"in_degree_of(v:V):Int32-instance-method","html_id":"in_degree_of(v:V):Int32-instance-method","name":"in_degree_of","doc":"Returns the incoming degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the incoming degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"in_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"degree_of(v)"}},{"id":"out_degree_of(v:V):Int32-instance-method","html_id":"out_degree_of(v:V):Int32-instance-method","name":"out_degree_of","doc":"Returns the outgoing degree of the given vertex *v*.\n\nFor undirected graphs, the value equals `#degree_of`.","summary":"<p>Returns the outgoing degree of the given vertex <em>v</em>.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V) : Int32","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"out_degree_of","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Int32","visibility":"Public","body":"degree_of(v)"}},{"id":"remove_edge(u:V,v:V,&)-instance-method","html_id":"remove_edge(u:V,v:V,&amp;)-instance-method","name":"remove_edge","doc":null,"summary":null,"abstract":false,"args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(u : V, v : V, &)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"remove_edge","args":[{"name":"u","doc":null,"default_value":"","external_name":"u","restriction":"V"},{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":2,"block_arg":null,"return_type":"","visibility":"Public","body":"if edge = edge?(u, v)\n  @vertices[u].delete(v)\n  @vertices[v].delete(u)\n  @size = @size - 1\n  edge\nelse\n  yield u, v\nend"}},{"id":"remove_vertex(v:V)-instance-method","html_id":"remove_vertex(v:V)-instance-method","name":"remove_vertex","doc":"Remove given vertex *v* from this graph.\nEdges incident to *v* are also removed.\n\nRaises a `GraphError` if vertex is not part of the graph.\n\n```\ng = CGL::Graph(String).new(edges: [{\"a\", \"b\"}, {\"b\", \"c\"}])\ng.size # => 2\ng.remove_vertex(\"b\")\ng.size # => 0\n```","summary":"<p>Remove given vertex <em>v</em> from this graph.</p>","abstract":false,"args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"args_string":"(v : V)","source_link":"https://github.com/RomainFranceschini/cgl/blob/22e014a9e99cfb4a6182fdbe4ef8a14650b5c376/src/cgl/graph.cr#L19","def":{"name":"remove_vertex","args":[{"name":"v","doc":null,"default_value":"","external_name":"v","restriction":"V"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"if has_vertex?(v)\n  @size = @size - @vertices[v].size\n  each_adjacent(v) do |u|\n    @vertices[u].delete(v)\n  end\n  @vertices.delete(v)\nelse\n  raise(GraphError.new(\"The vertex #{v} is not in the graph.\"))\nend"}}],"macros":[],"types":[]}]}]}})